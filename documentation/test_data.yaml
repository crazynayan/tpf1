openapi: "3.0.0"
info:
  version: 1.0.0
  title: TPF Analyzer API
  license:
    name: MIT
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    TestData:
      type: object
      properties:
        cores:
          type: array
          items:
            type: object
          example: []
        errors:
          type: array
          items:
            type: string
          example: []
        fixed_files:
          type: array
          items:
            type: object
          example: []
        id:
          type: string
          example: IkhI8xpARRIKbLgSWIUL
        name:
          type: string
          example: ETA5 Testing 123
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Output'
        partition:
          type: string
          example: ""
        pnr:
          type: array
          example: []
        regs:
          type: object
          additionalProperties:
            type: integer
          example: {}
        seg_name:
          type: string
          example: ETA5
        tpfdf:
          type: array
          example: []
    Output:
      type:
        object
      properties:
        cores:
          type: array
          items:
            type: object
          example: []
        dumps:
          type: array
          items:
            type: string
          example: []
        id:
          type: string
          example: O1hI8xpARRIKbLgSWIUL
        last_line:
          type: string
          example: ""
        messages:
          type: array
          items:
            type: string
          example: []
        reg_pointers:
          type: object
          additionalProperties:
            type: integer
          example: {}
        regs:
          type: object
          additionalProperties:
            type: integer
          example: {}
servers:
  - url: http://10.0.75.1:8000
    description: docker
  - url: http://localhost:8010
    description: localhost
security:
  - BearerAuth: []
paths:
  /tokens:
    post:
      summary: Get an API Token
      security:
        - BasicAuth: []
      operationId: get_token
      responses:
        '200':
          description: A valid token to be used as a Bearer Authorization
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 0OiSPRqyXCq3ny0yYVKecPtbtoClHwDL
        '401':
          description: Authentication failed. Invalid username or password.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized

  /test_data:
    post:
      summary: Create a Test data with name and seg name
      security:
        - BearerAuth: []
      operationId: create_test_data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: ETA5 Testing 123
                seg_name:
                  type: string
                  example: ETA5
      responses:
        '200':
          description: A Test Data with just name and seg name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestData'
        '400':
          description: Error in creating test data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Invalid format of test data. Need unique name and seg_name only."
    get:
      summary: Get a list of test data
      security:
        - BearerAuth: []
      operationId: get_test_data_header
      parameters:
        - name: name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Get a list of all test data or just one by name if name provided
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: X1hI8xpARRIKbLgSWIUL
                    name:
                      type: string
                      example: ETA5 Testing 123
                    seg_name:
                      type: string
                      example: ETA5
        '404':
          description: Test data not found by the name provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: "No test data found by this name"

  /test_data/{test_data_id}:
    delete:
      summary: Delete Test Data
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Test Data deleted. Test Data ID that was deleted is returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  test_data_id:
                    type: string
                    example: T1hI8xpARRIKbLgSWIUL
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: "Test data id not found"

  /test_data/{test_data_id}/rename:
    patch:
      summary: Rename Test Data. Also change its seg_name
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: X2hI8xpARRIKbLgSWIUL
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: ETA5 Testing 1234
                seg_name:
                  type: string
                  example: ETA6
      responses:
        '200':
          description: Test Data renamed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: X2hI8xpARRIKbLgSWIUL
                  name:
                    type: string
                    example: ETA2 Testing 123
                  seg_name:
                    type: string
                    example: ETA2
        '400':
          description: Error in renaming test data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Error in renaming test data"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: "Test data id not found"

  /test_data/{test_data_id}/copy:
    post:
      summary: Create a copy of the test data with a new name
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: X9hI8xpARRIKbLgSWIUL
      responses:
        '200':
          description: Test Data copied. The ID of the new test data is returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: Y4hI8xpARRIKbLgSWIUL
                  name:
                    type: string
                    example: ETA5 Testing 123 - Copy
                  seg_name:
                    type: string
                    example: ETA5
        '400':
          description: Error in copying test data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Error in copying test data"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: "Test data id not found"
