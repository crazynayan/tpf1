openapi: "3.0.0"
info:
  version: 1.0.0
  title: TPF Analyzer API
  license:
    name: MIT
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    TestData:
      type: object
      properties:
        cores:
          type: array
          items:
            type: object
          example: []
        errors:
          type: array
          items:
            type: string
          example: []
        fixed_files:
          type: array
          items:
            type: object
          example: []
        id:
          type: string
          example: IkhI8xpARRIKbLgSWIUL
        name:
          type: string
          example: ETA5 Testing 123
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/Output'
        partition:
          type: string
          example: ""
        pnr:
          type: array
          example: []
        regs:
          type: object
          additionalProperties:
            type: integer
          example: {}
        seg_name:
          type: string
          example: ETA5
        tpfdf:
          type: array
          example: []
    Output:
      type:
        object
      properties:
        cores:
          type: array
          items:
            type: object
          example: []
        dumps:
          type: array
          items:
            type: string
          example: []
        id:
          type: string
          example: O1hI8xpARRIKbLgSWIUL
        last_line:
          type: string
          example: ""
        messages:
          type: array
          items:
            type: string
          example: []
        reg_pointers:
          type: object
          additionalProperties:
            type: integer
          example: {}
        regs:
          type: object
          additionalProperties:
            type: integer
          example: {}
    Tpfdf:
      type:
        object
      properties:
        id:
          type: string
          example: 4xrCCwXKUHGW0RDU7pUi
          required: true
        macro_name:
          type: string
          example: TR1GAA
          required: true
        key:
          type: string
          example: 40
          required: true
          maxLength: 2
          minLength: 2
        field_data:
          type: array
          required: True
          items:
            type: object
            properties:
              field:
                type: string
                example: TR1G_40_PTI
              data:
                type: string
                format: byte
                example: AQ==
        variation:
          type: integer
          example: 0
          required: true
          minimum: 0
    Error404:
      type:
        object
      properties:
        error:
          type: string
          example: Not Found
        message:
          type: string
          example: "Test data id not found"

servers:
  - url: http://10.0.75.1:8000
    description: docker
  - url: http://localhost:8010
    description: localhost
security:
  - BearerAuth: []
paths:
  /tokens:
    post:
      summary: Get an API Token
      security:
        - BasicAuth: []
      operationId: get_token
      responses:
        '200':
          description: A valid token to be used as a Bearer Authorization
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 0OiSPRqyXCq3ny0yYVKecPtbtoClHwDL
        '401':
          description: Authentication failed. Invalid username or password.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized

  /test_data:
    post:
      summary: Create a Test data with name and seg name
      security:
        - BearerAuth: []
      operationId: create_test_data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: ETA5 Testing 123
                seg_name:
                  type: string
                  example: ETA5
      responses:
        '200':
          description: A Test Data with just name and seg name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestData'
        '400':
          description: Error in creating test data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Invalid format of test data. Need unique name and seg_name only."
    get:
      summary: Get a list of test data
      security:
        - BearerAuth: []
      operationId: get_test_data_header
      parameters:
        - name: name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Get a list of all test data or just one by name if name provided
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: X1hI8xpARRIKbLgSWIUL
                    name:
                      type: string
                      example: ETA5 Testing 123
                    seg_name:
                      type: string
                      example: ETA5
        '404':
          description: Test data not found by the name provided
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Not Found
                  message:
                    type: string
                    example: "No test data found by this name"

  /test_data/{test_data_id}:
    delete:
      summary: Delete Test Data
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Test Data deleted. Test Data ID that was deleted is returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  test_data_id:
                    type: string
                    example: T1hI8xpARRIKbLgSWIUL
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

  /test_data/{test_data_id}/rename:
    patch:
      summary: Rename Test Data. Also change its seg_name
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: X2hI8xpARRIKbLgSWIUL
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: ETA5 Testing 1234
                seg_name:
                  type: string
                  example: ETA6
      responses:
        '200':
          description: Test Data renamed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: X2hI8xpARRIKbLgSWIUL
                  name:
                    type: string
                    example: ETA2 Testing 123
                  seg_name:
                    type: string
                    example: ETA2
        '400':
          description: Error in renaming test data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Error in renaming test data"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

  /test_data/{test_data_id}/copy:
    post:
      summary: Create a copy of the test data with a new name
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: X9hI8xpARRIKbLgSWIUL
      responses:
        '200':
          description: Test Data copied. The ID of the new test data is returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: Y4hI8xpARRIKbLgSWIUL
                  name:
                    type: string
                    example: ETA5 Testing 123 - Copy
                  seg_name:
                    type: string
                    example: ETA5
        '400':
          description: Error in copying test data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Error in copying test data"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

  /test_data/{test_data_id}/output/regs:
    patch:
      summary: Add output Registers. Send an empty list for regs to remove output Registers.
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: Q1hI8xpARRIKbLgSWIUL
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                regs:
                  type: array
                  items:
                    type: string
                  example: ['R1', 'R3']
      responses:
        '200':
          description: Output Registers Added or Removed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: Q1hI8xpARRIKbLgSWIUL

        '400':
          description: Invalid format send in body of request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Invalid format of Registers"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

  /test_data/{test_data_id}/output/cores/{macro_name}/fields:
    patch:
      summary: Add a field that it to be shown in result
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: Q1hI8xpARRIKbLgSWIUL
        - name: macro_name
          in: path
          required: true
          schema:
            type: string
            example: UI2PF
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                field:
                  type: string
                  example: UI2CNN
                  required: true
                length:
                  type: integer
                  example: 2
                  required: false
                base_reg:
                  type: string
                  example: R7
                  required: false
      responses:
        '200':
          description: Field added.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 1xrCCwXKUHGW0RDU7pUi
                  field:
                    type: string
                    example: UI2CNN
                  length:
                    type: integer
                    example: 2
                  data:
                    type: string
                    example: ""
        '400':
          description: Invalid format send in body of request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Error in adding field"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

  /test_data/{test_data_id}/output/cores/{macro_name}/fields/{field_name}:
    delete:
      summary: Delete an output field
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: Q1hI8xpARRIKbLgSWIUL
        - name: macro_name
          in: path
          required: true
          schema:
            type: string
            example: UI2PF
        - name: field_name
          in: path
          required: true
          schema:
            type: string
            example: UI2CNN
      responses:
        '200':
          description: Field delete.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 1xrCCwXKUHGW0RDU7pUi
                  field:
                    type: string
                    example: UI2CNN
                  length:
                    type: integer
                    example: 2
                  data:
                    type: string
                    example: ""
        '400':
          description: Error in deleting field
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Error in deleting field"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

  /test_data/{test_data_id}/input/cores/{macro_name}/fields:
    patch:
      summary: Add a field and its value that is required to run the segment
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: C1hI8xpARRIKbLgSWIUL
        - name: macro_name
          in: path
          required: true
          schema:
            type: string
            example: WA0AA
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                field:
                  type: string
                  example: WA0BBR
                  required: true
                data:
                  type: string
                  format: byte
                  example: AQ==
                  required: true
      responses:
        '200':
          description: Field added.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 2xrCCwXKUHGW0RDU7pUi
                  field:
                    type: string
                    example: WA0BBR
                  length:
                    type: integer
                    example: 0
                  data:
                    type: string
                    format: byte
                    example: AQ==
        '400':
          description: Invalid format send in body of request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Error in adding field"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

  /test_data/{test_data_id}/input/cores/{macro_name}/fields/{field_name}:
    delete:
      summary: Delete an input field
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: Q1hI8xpARRIKbLgSWIUL
        - name: macro_name
          in: path
          required: true
          schema:
            type: string
            example: WA0AA
        - name: field_name
          in: path
          required: true
          schema:
            type: string
            example: WA0BBR
      responses:
        '200':
          description: Field delete.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 2xrCCwXKUHGW0RDU7pUi
                  field:
                    type: string
                    example: WA0BBR
                  length:
                    type: integer
                    example: 0
                  data:
                    type: string
                    format: byte
                    example: AQ==
        '400':
          description: Error in deleting field
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Error in deleting field"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

  /test_data/{test_data_id}/input/regs:
    patch:
      summary: Add input Register one at a time.
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: L1hI8xpARRIKbLgSWIUL
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reg:
                  type: string
                  example: 'R2'
                value:
                  type: integer
                  example: -1
      responses:
        '200':
          description: Input Register added
          content:
            application/json:
              schema:
                type: object
                properties:
                  test_data_id:
                    type: string
                    example: L1hI8xpARRIKbLgSWIUL

        '400':
          description: Invalid format of input Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Invalid format input Register"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

  /test_data/{test_data_id}/input/regs/{reg}:
    delete:
      summary: Delete an input Register
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: M1hI8xpARRIKbLgSWIUL
        - name: reg
          in: path
          required: true
          schema:
            type: string
            example: R1
      responses:
        '200':
          description: Input Register deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  test_data_id:
                    type: string
                    example: M1hI8xpARRIKbLgSWIUL

        '400':
          description: Invalid Register
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Invalid Register"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

  /test_data/{test_data_id}/input/pnr:
    patch:
      summary: Add a PNR to test data
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: D1hI8xpARRIKbLgSWIUL
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  example: name
                  required: true
                locator:
                  type: string
                  example: DGZEWR
                  required: false
                data:
                  type: string
                  example: 1ZAVERI,1SHAH
                  required: false
      responses:
        '200':
          description: Field added.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 3xrCCwXKUHGW0RDU7pUi
                  key:
                    type: string
                    example: name
                  locator:
                    type: string
                    example: DGZEWR
                  data:
                    type: string
                    example: 1SHAH
                  field_data:
                    type: array
                    items:
                      type: object
                    example: []
        '400':
          description: Error in adding PNR element
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Error in adding PNR element"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

  /test_data/{test_data_id}/input/pnr/{pnr_id}:
    delete:
      summary: Delete a PNR element
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: D1hI8xpARRIKbLgSWIUL
        - name: pnr_id
          in: path
          required: true
          schema:
            type: string
            example: 3xrCCwXKUHGW0RDU7pUi
      responses:
        '200':
          description: PNR element deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 3xrCCwXKUHGW0RDU7pUi
                  key:
                    type: string
                    example: name
                  locator:
                    type: string
                    example: DGZEWR
                  data:
                    type: string
                    example: 1SHAH
                  field_data:
                    type: array
                    items:
                      type: object
                    example: []

        '400':
          description: Error in deleting PNR
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Error in deleting PNR"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

  /test_data/{test_data_id}/input/pnr/{pnr_id}/fields:
    patch:
      summary: Add field bytes to PNR element
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: D1hI8xpARRIKbLgSWIUL
        - name: pnr_id
          in: path
          required: true
          schema:
            type: string
            example: 3xrCCwXKUHGW0RDU7pUi
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                macro_name:
                  type: string
                  example: WI0BS
                  required: true
                field_data:
                  type: object
                  additionalProperties:
                    type: string
                  example: {'WI0ARC': 'AQ=='}
      responses:
        '200':
          description: PNR element deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 3xrCCwXKUHGW0RDU7pUi
                  key:
                    type: string
                    example: name
                  locator:
                    type: string
                    example: DGZEWR
                  data:
                    type: string
                    example: ""
                  field_data:
                    type: array
                    items:
                      type: object
                      properties:
                        field:
                          type: string
                          example: WI0ARC
                        data:
                          type: string
                          format: byte
                          example: AQ==
        '400':
          description: Error in adding field
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Error in adding field"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

  /test_data/{test_data_id}/input/tpfdf:
    patch:
      summary: Add a Tpfdf lrec
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: E1hI8xpARRIKbLgSWIUL
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                macro_name:
                  type: string
                  example: TR1GAA
                  required: true
                key:
                  type: string
                  example: '40'
                  required: true
                  maxLength: 2
                  minLength: 2
                field_data:
                  type: object
                  required: True
                  additionalProperties:
                    type: string
                  example: {'TR1G_40_PTI': 'AQ=='}
                variation:
                  type: integer
                  example: 0
                  required: true
                  minimum: 0
      responses:
        '200':
          description: Tpfdf lrec added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tpfdf'
        '400':
          description: Error in adding field
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Error in adding Tpfdf lrec"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'

  /test_data/{test_data_id}/input/tpfdf/{tpfdf_id}:
    delete:
      summary: Delete a Tpfdf lrec
      security:
        - BearerAuth: []
      parameters:
        - name: test_data_id
          in: path
          required: true
          schema:
            type: string
            example: E1hI8xpARRIKbLgSWIUL
        - name: tpfdf_id
          in: path
          required: true
          schema:
            type: string
            example: 4xrCCwXKUHGW0RDU7pUi
      responses:
        '200':
          description: Tpfdf lrec deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tpfdf'
        '400':
          description: Error in deleting Tpfdf lrec
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Bad Request
                  message:
                    type: string
                    example: "Error in deleting Tpfdf lrec"
        '404':
          description: Test Data ID is not present in the DB
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
